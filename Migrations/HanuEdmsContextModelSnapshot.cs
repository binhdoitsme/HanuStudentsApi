// <auto-generated />
using System;
using HanuEdmsApi.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HanuEdmsApi.Migrations
{
    [DbContext(typeof(HanuEdmsContext))]
    partial class HanuEdmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HanuEdmsApi.Models.AcademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AcademicYearDescription")
                        .IsRequired()
                        .HasColumnType("varchar(12) CHARACTER SET utf8mb4")
                        .HasMaxLength(12);

                    b.Property<string>("AcademicYearShort")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(2048);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("varchar(8) CHARACTER SET utf8mb4")
                        .HasMaxLength(8);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<int?>("CourseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreditCount")
                        .HasColumnType("int");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int?>("FacultyId1")
                        .HasColumnType("int");

                    b.Property<int?>("RegistrationPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SemesterId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CourseTypeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("FacultyId1");

                    b.HasIndex("RegistrationPeriodId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SemesterId1");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.CourseClass", b =>
                {
                    b.Property<int>("CourseClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseClassCode")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId1")
                        .HasColumnType("int");

                    b.Property<int>("MaxSlots")
                        .HasColumnType("int");

                    b.Property<int>("RemainingSlots")
                        .HasColumnType("int");

                    b.HasKey("CourseClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseId1");

                    b.ToTable("CourseClass");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.CourseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<int>("PricePerCredit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CourseType");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("varchar(127) CHARACTER SET utf8mb4")
                        .HasMaxLength(127);

                    b.Property<int>("RequiredCreditCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.FeeLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<float>("LineSum")
                        .HasColumnType("float");

                    b.Property<int?>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("FeeLine");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Grades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("AttendanceMark")
                        .HasColumnType("double");

                    b.Property<double>("FinalMark")
                        .HasColumnType("double");

                    b.Property<double>("InternalMark")
                        .HasColumnType("double");

                    b.Property<double>("OverallMark")
                        .HasColumnType("double");

                    b.Property<int?>("course_id")
                        .HasColumnType("int");

                    b.Property<int?>("student_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("course_id");

                    b.HasIndex("student_id");

                    b.ToTable("GradeReport");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Hometown")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseClassId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("GradesReportId")
                        .HasColumnType("int");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradesReportId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.RegistrationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("SemesterId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SemesterId1");

                    b.ToTable("RegistrationPeriod");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.StudentProfile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int?>("AcademicYearId1")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("varchar(6) CHARACTER SET utf8mb4")
                        .HasMaxLength(6);

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<double>("OverallMark")
                        .HasColumnType("double");

                    b.Property<int>("PassedCreditCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("AcademicYearId1");

                    b.HasIndex("FacultyId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.TimetableCell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseClassId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsLecture")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SessionNo")
                        .HasColumnType("int");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CourseClassId");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.UserAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastLogin")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(35) CHARACTER SET utf8mb4")
                        .HasMaxLength(35);

                    b.HasKey("AccountId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Course", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.CourseType", "CourseType")
                        .WithMany()
                        .HasForeignKey("CourseTypeId");

                    b.HasOne("HanuEdmsApi.Models.Faculty", null)
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId1");

                    b.HasOne("HanuEdmsApi.Models.RegistrationPeriod", null)
                        .WithMany("Courses")
                        .HasForeignKey("RegistrationPeriodId");

                    b.HasOne("HanuEdmsApi.Models.Semester", null)
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId1");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.CourseClass", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.Course", null)
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HanuEdmsApi.Models.FeeLine", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Grades", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("course_id");

                    b.HasOne("HanuEdmsApi.Models.StudentProfile", "Student")
                        .WithMany()
                        .HasForeignKey("student_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HanuEdmsApi.Models.Registration", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.CourseClass", "CourseClass")
                        .WithMany()
                        .HasForeignKey("CourseClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Grades", "GradesReport")
                        .WithMany()
                        .HasForeignKey("GradesReportId");

                    b.HasOne("HanuEdmsApi.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.StudentProfile", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HanuEdmsApi.Models.RegistrationPeriod", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.Semester", null)
                        .WithMany("RegistrationPeriods")
                        .HasForeignKey("SemesterId1");
                });

            modelBuilder.Entity("HanuEdmsApi.Models.StudentProfile", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.AcademicYear", null)
                        .WithMany("Students")
                        .HasForeignKey("AcademicYearId");

                    b.HasOne("HanuEdmsApi.Models.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId1");

                    b.HasOne("HanuEdmsApi.Models.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HanuEdmsApi.Models.UserAccount", null)
                        .WithOne("StudentProfile")
                        .HasForeignKey("HanuEdmsApi.Models.StudentProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HanuEdmsApi.Models.Profile", "BasicProfile")
                        .WithOne()
                        .HasForeignKey("HanuEdmsApi.Models.StudentProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HanuEdmsApi.Models.TimetableCell", b =>
                {
                    b.HasOne("HanuEdmsApi.Models.CourseClass", null)
                        .WithMany("Timetables")
                        .HasForeignKey("CourseClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
